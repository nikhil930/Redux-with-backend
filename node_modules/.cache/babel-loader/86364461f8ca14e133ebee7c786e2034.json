{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst initialStateItem = {\n  items: []\n};\nconst changeItem = createSlice({\n  name: 'addToCart',\n  initialState: initialStateItem,\n  reducers: {\n    addToCart(state, action) {\n      // console.log(state.items);\n      const e = state.items.find((element, index) => {\n        // console.log(element.title);\n        return element.title === action.payload;\n      });\n\n      if (e) {\n        // console.log('*');\n        e.amount++;\n      } else {\n        state.items = [...state.items, action.payload]; // console.log(state.items);\n      }\n    },\n\n    removeFromCart(state, action) {\n      // console.log(action.payload);\n      console.log(state);\n      console.log(action.payload);\n      console.log(state.items);\n\n      if (y.amount === 1) {\n        const r = state.items.findIndex(element => {\n          return element.title === action.payload.title;\n        });\n        state.items.splice(r, 1);\n      } else {\n        y.amount--;\n      }\n    }\n\n  }\n}); // const removeItem =createSlice({\n//     name:'removefromCart',\n//     initialState:items,\n//     reducers:{\n//         removeFromCart(state ,action){\n//             // console.log(action.payload);\n//             console.log(initialStateItem);\n//                 // console.log(action.payload);\n//                 // console.log(state.items);\n//                 // if(y.amount===1)\n//                 // {\n//                 //     const r=state.items.findIndex((element)=>{\n//                 //         return element.title===action.payload.title ;\n//                 //     })\n//                 //    state.items.splice(r,1);\n//                 // }\n//                 // else\n//                 // {\n//                 //     y.amount--;\n//                 // }\n//     }\n// }\n// })\n\nexport const changeActions = changeItem.actions;\nconst store = configureStore({\n  reducer: {\n    changeItem: changeItem.reducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/Nikhil/Desktop/Projects/Redux-II/src/store/index.js"],"names":["configureStore","createSlice","initialStateItem","items","changeItem","name","initialState","reducers","addToCart","state","action","e","find","element","index","title","payload","amount","removeFromCart","console","log","y","r","findIndex","splice","changeActions","actions","store","reducer"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AAEA,MAAMC,gBAAgB,GAAE;AAChBC,EAAAA,KAAK,EAAC;AADU,CAAxB;AAIA,MAAMC,UAAU,GAAGH,WAAW,CAAC;AAC3BI,EAAAA,IAAI,EAAC,WADsB;AAE3BC,EAAAA,YAAY,EAACJ,gBAFc;AAG3BK,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,CAACC,KAAD,EAASC,MAAT,EAAgB;AACrB;AACC,YAAMC,CAAC,GAACF,KAAK,CAACN,KAAN,CAAYS,IAAZ,CAAiB,CAACC,OAAD,EAAWC,KAAX,KAAmB;AACzC;AACH,eAAOD,OAAO,CAACE,KAAR,KAAgBL,MAAM,CAACM,OAA9B;AAAsC,OAF9B,CAAR;;AAID,UAAGL,CAAH,EACA;AACI;AACAA,QAAAA,CAAC,CAACM,MAAF;AACH,OAJD,MAMA;AACIR,QAAAA,KAAK,CAACN,KAAN,GAAY,CAAC,GAAGM,KAAK,CAACN,KAAV,EAAkBO,MAAM,CAACM,OAAzB,CAAZ,CADJ,CAEI;AACH;AACJ,KAjBI;;AAkBLE,IAAAA,cAAc,CAACT,KAAD,EAAQC,MAAR,EAAe;AACzB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AAEIU,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACM,OAAnB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACN,KAAlB;;AACA,UAAGkB,CAAC,CAACJ,MAAF,KAAW,CAAd,EACA;AACI,cAAMK,CAAC,GAACb,KAAK,CAACN,KAAN,CAAYoB,SAAZ,CAAuBV,OAAD,IAAW;AACrC,iBAAOA,OAAO,CAACE,KAAR,KAAgBL,MAAM,CAACM,OAAP,CAAeD,KAAtC;AACH,SAFO,CAAR;AAGDN,QAAAA,KAAK,CAACN,KAAN,CAAYqB,MAAZ,CAAmBF,CAAnB,EAAqB,CAArB;AACF,OAND,MAQA;AACID,QAAAA,CAAC,CAACJ,MAAF;AACH;AACZ;;AAnCQ;AAHkB,CAAD,CAA9B,C,CA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMQ,aAAa,GAACrB,UAAU,CAACsB,OAA/B;AAEP,MAAMC,KAAK,GAAG3B,cAAc,CAAC;AACzB4B,EAAAA,OAAO,EAAC;AAACxB,IAAAA,UAAU,EAACA,UAAU,CAACwB;AAAvB;AADiB,CAAD,CAA5B;AAIA,eAAeD,KAAf","sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialStateItem= {\r\n        items:[]\r\n}\r\n\r\nconst changeItem = createSlice({\r\n    name:'addToCart',\r\n    initialState:initialStateItem,\r\n    reducers:{\r\n        addToCart(state , action){\r\n            // console.log(state.items);\r\n             const e=state.items.find((element  ,index)=>{\r\n                // console.log(element.title);\r\n             return element.title===action.payload});\r\n            \r\n            if(e)\r\n            {\r\n                // console.log('*');\r\n                e.amount++;\r\n            }\r\n            else\r\n            {\r\n                state.items=[...state.items , action.payload];\r\n                // console.log(state.items);\r\n            }\r\n        },\r\n        removeFromCart(state ,action){\r\n            // console.log(action.payload);\r\n            console.log(state);\r\n            \r\n                console.log(action.payload);\r\n                console.log(state.items);\r\n                if(y.amount===1)\r\n                {\r\n                    const r=state.items.findIndex((element)=>{\r\n                        return element.title===action.payload.title ;\r\n                    })\r\n                   state.items.splice(r,1);\r\n                }\r\n                else\r\n                {\r\n                    y.amount--;\r\n                }\r\n    }\r\n\r\n    }\r\n\r\n})\r\n\r\n// const removeItem =createSlice({\r\n//     name:'removefromCart',\r\n//     initialState:items,\r\n//     reducers:{\r\n//         removeFromCart(state ,action){\r\n//             // console.log(action.payload);\r\n//             console.log(initialStateItem);\r\n            \r\n//                 // console.log(action.payload);\r\n//                 // console.log(state.items);\r\n//                 // if(y.amount===1)\r\n//                 // {\r\n//                 //     const r=state.items.findIndex((element)=>{\r\n//                 //         return element.title===action.payload.title ;\r\n//                 //     })\r\n//                 //    state.items.splice(r,1);\r\n//                 // }\r\n//                 // else\r\n//                 // {\r\n//                 //     y.amount--;\r\n//                 // }\r\n//     }\r\n// }\r\n// })\r\n\r\nexport const changeActions=changeItem.actions;\r\n\r\nconst store = configureStore({\r\n    reducer:{changeItem:changeItem.reducer}\r\n})\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}