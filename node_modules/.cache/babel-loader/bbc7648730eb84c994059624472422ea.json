{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikhil\\\\Desktop\\\\Projects\\\\Redux-II\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { notifyAction } from './store/index';\nimport { useEffect } from 'react/cjs/react.development';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet initialRender = true;\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const items = useSelector(state => state.changeItem.items);\n  const show = useSelector(state => state.uiChange.isShowing);\n  const notification = useSelector(state => state.uiChange.notification);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('https://react-http-8d93b-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(items)\n      });\n\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      dispatch(notifyAction.notifyChange({\n        status: 'Success',\n        title: 'Success',\n        message: 'Sent Data'\n      }));\n    };\n\n    if (initialRender) {\n      return;\n      initialRender = false;\n    }\n\n    fetchData().catch(err => {\n      if (err) {\n        dispatch(notifyAction.notifyChange({\n          status: 'Failure',\n          title: 'Error',\n          message: 'Sending Data Failed !!!'\n        }));\n      }\n    });\n    console.log(show);\n  }, [items, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [show && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"iIpIewnxd0ShTCGNfIe7oPv+ZtQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Nikhil/Desktop/Projects/Redux-II/src/App.js"],"names":["Cart","Layout","Products","Notification","useSelector","useDispatch","notifyAction","useEffect","initialRender","App","dispatch","items","state","changeItem","show","uiChange","isShowing","notification","fetchData","response","fetch","method","body","JSON","stringify","ok","Error","notifyChange","status","title","message","catch","err","console","log"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAAQC,WAAR,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,SAASC,SAAT,QAA0B,6BAA1B;;;AAEA,IAAIC,aAAa,GAAG,IAApB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEf,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,KAAK,GAAGP,WAAW,CAACQ,KAAK,IAAGA,KAAK,CAACC,UAAN,CAAiBF,KAA1B,CAAzB;AACA,QAAMG,IAAI,GAAGV,WAAW,CAACQ,KAAK,IAAEA,KAAK,CAACG,QAAN,CAAeC,SAAvB,CAAxB;AACA,QAAMC,YAAY,GAAEb,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACG,QAAN,CAAeE,YAAzB,CAA/B;AAEAV,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMW,SAAS,GAAG,YAAU;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAD,EAAmE;AAC7FC,QAAAA,MAAM,EAAC,KADsF;AAE7FC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeb,KAAf;AAFwF,OAAnE,CAA5B;;AAIA,UAAG,CAACQ,QAAQ,CAACM,EAAb,EACA;AACE,cAAM,IAAIC,KAAJ,CAAW,sBAAX,CAAN;AACD;;AACDhB,MAAAA,QAAQ,CAACJ,YAAY,CAACqB,YAAb,CAA0B;AACjCC,QAAAA,MAAM,EAAC,SAD0B;AAEjCC,QAAAA,KAAK,EAAC,SAF2B;AAGjCC,QAAAA,OAAO,EAAC;AAHyB,OAA1B,CAAD,CAAR;AAKD,KAdC;;AAeF,QAAGtB,aAAH,EACA;AACE;AACAA,MAAAA,aAAa,GAAC,KAAd;AAED;;AACDU,IAAAA,SAAS,GAAGa,KAAZ,CAAkBC,GAAG,IAAE;AACrB,UAAGA,GAAH,EAAO;AACPtB,QAAAA,QAAQ,CAACJ,YAAY,CAACqB,YAAb,CAA0B;AACjCC,UAAAA,MAAM,EAAC,SAD0B;AAEjCC,UAAAA,KAAK,EAAC,OAF2B;AAGjCC,UAAAA,OAAO,EAAC;AAHyB,SAA1B,CAAD,CAAR;AAKD;AACA,KARD;AAUAG,IAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ;AACC,GAjCQ,EAiCN,CAACH,KAAD,EAASD,QAAT,CAjCM,CAAT;AAoCE,sBACE;AAAA,eACCI,IAAI,iBAAI,QAAC,YAAD;AACT,MAAA,MAAM,EAAEG,YAAY,CAACW,MADZ;AAET,MAAA,KAAK,EAAEX,YAAY,CAACY,KAFX;AAGT,MAAA,OAAO,EAAEZ,YAAY,CAACa;AAHb;AAAA;AAAA;AAAA;AAAA,YADT,eAMA,QAAC,MAAD;AAAA,8BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANA;AAAA,kBADF;AAaD;;GAxDQrB,G;UAEQJ,W,EACHD,W,EACDA,W,EACOA,W;;;KALXK,G;AA0DT,eAAeA,GAAf","sourcesContent":["import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification'\nimport {useSelector , useDispatch} from 'react-redux';\nimport {notifyAction} from './store/index'\nimport { useEffect } from 'react/cjs/react.development';\n\nlet initialRender = true;\n\nfunction App() {\n\nconst dispatch = useDispatch();\nconst items = useSelector(state=> state.changeItem.items);\nconst show = useSelector(state=>state.uiChange.isShowing);\nconst notification =useSelector(state => state.uiChange.notification)\n\nuseEffect(()=>{\n  const fetchData = async ()=>{\n  const response = await fetch('https://react-http-8d93b-default-rtdb.firebaseio.com/cart.json', {\n    method:'PUT',\n    body:JSON.stringify(items)\n  })\n  if(!response.ok)\n  {\n    throw new Error ('Something went wrong');\n  }\n  dispatch(notifyAction.notifyChange({\n    status:'Success',\n    title:'Success',\n    message:'Sent Data'\n  }))\n}\nif(initialRender)\n{\n  return;\n  initialRender=false;\n \n}\nfetchData().catch(err=>{\n  if(err){\n  dispatch(notifyAction.notifyChange({\n    status:'Failure',\n    title:'Error',\n    message:'Sending Data Failed !!!'\n  }))\n}\n}\n)\nconsole.log(show);\n}, [items , dispatch])\n\n\n  return (\n    <>\n    {show && <Notification \n    status={notification.status}\n    title={notification.title}\n    message={notification.message}\n     />}\n    <Layout>\n      <Cart />\n      <Products />\n    </Layout>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}