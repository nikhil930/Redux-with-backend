{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst initialStateItem = {\n  items: []\n};\nconst addItem = createSlice({\n  name: 'addToCart',\n  initialState: initialStateItem,\n  reducers: {\n    addToCart(state, action) {\n      // console.log(action.payload);\n      const e = state.items.find((element, index) => {\n        return element.title === action.payload.title;\n      });\n\n      if (e) {\n        // console.log('*');\n        e.amount++;\n      } else {\n        state.items = [...state.items, action.payload]; // console.log(state.items);\n      }\n    }\n\n  }\n});\nconst removeItem = createSlice({\n  name: 'removefromCart',\n  initialState: initialStateItem,\n  reducers: {\n    removeFromCart(state, action) {\n      // console.log(action.payload);\n      const y = state.items.find((element, index) => {\n        return element.title === action.payload;\n      });\n\n      if (y.amount === 1) {\n        const r = state.items.findIndex(element => {\n          return element.title === action.payload.title;\n        });\n        state.items.splice(r, 1);\n      } else {\n        y.amount--;\n      }\n    }\n\n  }\n});\nexport const removeActions = removeItem.actions;\nexport const addActions = addItem.actions;\nconst store = configureStore({\n  reducer: {\n    addItem: addItem.reducer,\n    removeItem: removeItem.reducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/Nikhil/Desktop/Projects/Redux-II/src/store/index.js"],"names":["configureStore","createSlice","initialStateItem","items","addItem","name","initialState","reducers","addToCart","state","action","e","find","element","index","title","payload","amount","removeItem","removeFromCart","y","r","findIndex","splice","removeActions","actions","addActions","store","reducer"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AAEA,MAAMC,gBAAgB,GAAE;AAChBC,EAAAA,KAAK,EAAC;AADU,CAAxB;AAIA,MAAMC,OAAO,GAAGH,WAAW,CAAC;AACxBI,EAAAA,IAAI,EAAC,WADmB;AAExBC,EAAAA,YAAY,EAACJ,gBAFW;AAGxBK,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,CAACC,KAAD,EAASC,MAAT,EAAgB;AACrB;AACC,YAAMC,CAAC,GAACF,KAAK,CAACN,KAAN,CAAYS,IAAZ,CAAiB,CAACC,OAAD,EAAWC,KAAX,KAAmB;AAC5C,eAAOD,OAAO,CAACE,KAAR,KAAgBL,MAAM,CAACM,OAAP,CAAeD,KAAtC;AAA6C,OADrC,CAAR;;AAGD,UAAGJ,CAAH,EACA;AACI;AACAA,QAAAA,CAAC,CAACM,MAAF;AACH,OAJD,MAMA;AACIR,QAAAA,KAAK,CAACN,KAAN,GAAY,CAAC,GAAGM,KAAK,CAACN,KAAV,EAAkBO,MAAM,CAACM,OAAzB,CAAZ,CADJ,CAEI;AACH;AACJ;;AAhBI;AAHe,CAAD,CAA3B;AAwBA,MAAME,UAAU,GAAEjB,WAAW,CAAC;AAC1BI,EAAAA,IAAI,EAAC,gBADqB;AAE1BC,EAAAA,YAAY,EAACJ,gBAFa;AAG1BK,EAAAA,QAAQ,EAAC;AACLY,IAAAA,cAAc,CAACV,KAAD,EAAQC,MAAR,EAAe;AACzB;AACA,YAAMU,CAAC,GAACX,KAAK,CAACN,KAAN,CAAYS,IAAZ,CAAiB,CAACC,OAAD,EAAWC,KAAX,KAAmB;AACxC,eAAOD,OAAO,CAACE,KAAR,KAAgBL,MAAM,CAACM,OAA9B;AAAuC,OADnC,CAAR;;AAGI,UAAGI,CAAC,CAACH,MAAF,KAAW,CAAd,EACA;AACI,cAAMI,CAAC,GAACZ,KAAK,CAACN,KAAN,CAAYmB,SAAZ,CAAuBT,OAAD,IAAW;AACrC,iBAAOA,OAAO,CAACE,KAAR,KAAgBL,MAAM,CAACM,OAAP,CAAeD,KAAtC;AACH,SAFO,CAAR;AAGDN,QAAAA,KAAK,CAACN,KAAN,CAAYoB,MAAZ,CAAmBF,CAAnB,EAAqB,CAArB;AACF,OAND,MAQA;AACID,QAAAA,CAAC,CAACH,MAAF;AACH;AACR;;AAjBI;AAHiB,CAAD,CAA7B;AAwBA,OAAO,MAAMO,aAAa,GAACN,UAAU,CAACO,OAA/B;AACP,OAAO,MAAMC,UAAU,GAAGtB,OAAO,CAACqB,OAA3B;AAEP,MAAME,KAAK,GAAG3B,cAAc,CAAC;AACzB4B,EAAAA,OAAO,EAAC;AAACxB,IAAAA,OAAO,EAACA,OAAO,CAACwB,OAAjB;AAA2BV,IAAAA,UAAU,EAACA,UAAU,CAACU;AAAjD;AADiB,CAAD,CAA5B;AAIA,eAAeD,KAAf","sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialStateItem= {\r\n        items:[]\r\n}\r\n\r\nconst addItem = createSlice({\r\n    name:'addToCart',\r\n    initialState:initialStateItem,\r\n    reducers:{\r\n        addToCart(state , action){\r\n            // console.log(action.payload);\r\n             const e=state.items.find((element  ,index)=>{\r\n             return element.title===action.payload.title });\r\n            \r\n            if(e)\r\n            {\r\n                // console.log('*');\r\n                e.amount++;\r\n            }\r\n            else\r\n            {\r\n                state.items=[...state.items , action.payload];\r\n                // console.log(state.items);\r\n            }\r\n        }\r\n    }\r\n\r\n})\r\n\r\nconst removeItem =createSlice({\r\n    name:'removefromCart',\r\n    initialState:initialStateItem,\r\n    reducers:{\r\n        removeFromCart(state ,action){\r\n            // console.log(action.payload);\r\n            const y=state.items.find((element  ,index)=>{\r\n                return element.title===action.payload });\r\n\r\n                if(y.amount===1)\r\n                {\r\n                    const r=state.items.findIndex((element)=>{\r\n                        return element.title===action.payload.title ;\r\n                    })\r\n                   state.items.splice(r,1);\r\n                }\r\n                else\r\n                {\r\n                    y.amount--;\r\n                }\r\n        }\r\n    }\r\n});\r\n\r\nexport const removeActions=removeItem.actions;\r\nexport const addActions = addItem.actions;\r\n\r\nconst store = configureStore({\r\n    reducer:{addItem:addItem.reducer , removeItem:removeItem.reducer}\r\n})\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}