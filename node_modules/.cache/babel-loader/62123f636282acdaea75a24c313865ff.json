{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst initialStateItem = {\n  items: []\n};\nconst changeItem = createSlice({\n  name: 'addToCart',\n  initialState: initialStateItem,\n  reducers: {\n    addToCart(state, action) {\n      // console.log(state.items);\n      const e = state.items.find((element, index) => {\n        // console.log(element.title);\n        return element.title === action.payload.title;\n      }); // console.log(e);\n\n      if (e) {\n        // console.log('*');\n        e.amount++;\n      } else {\n        state.items = [...state.items, action.payload]; // console.log(state.items);\n      }\n    },\n\n    removeFromCart(state, action) {\n      const y = state.items.find((element, index) => {\n        // console.log(element.title);\n        return element.id === action.payload.id;\n      });\n\n      if (y.amount === 1) {\n        const r = state.items.findIndex(element => {\n          return element.title === action.payload.title;\n        });\n        state.items.splice(r, 1);\n      } else {\n        y.amount--;\n      }\n    }\n\n  }\n});\nconst uiChange = createSlice({\n  name: 'change-ui',\n  initialState: {\n    notification: null,\n    isShowing: false\n  },\n  reducers: {\n    notifyChange(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message\n      };\n      state.isShowing = true;\n    }\n\n  }\n});\nexport const changeActions = changeItem.actions;\nexport const notifyAction = uiChange.actions;\nconst store = configureStore({\n  reducer: {\n    changeItem: changeItem.reducer,\n    uiChange: uiChange.reducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/Nikhil/Desktop/Projects/Redux-II/src/store/index.js"],"names":["configureStore","createSlice","initialStateItem","items","changeItem","name","initialState","reducers","addToCart","state","action","e","find","element","index","title","payload","amount","removeFromCart","y","id","r","findIndex","splice","uiChange","notification","isShowing","notifyChange","status","message","changeActions","actions","notifyAction","store","reducer"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AAEA,MAAMC,gBAAgB,GAAE;AAChBC,EAAAA,KAAK,EAAC;AADU,CAAxB;AAIA,MAAMC,UAAU,GAAGH,WAAW,CAAC;AAC3BI,EAAAA,IAAI,EAAC,WADsB;AAE3BC,EAAAA,YAAY,EAACJ,gBAFc;AAG3BK,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,CAACC,KAAD,EAASC,MAAT,EAAgB;AACrB;AACC,YAAMC,CAAC,GAACF,KAAK,CAACN,KAAN,CAAYS,IAAZ,CAAiB,CAACC,OAAD,EAAWC,KAAX,KAAmB;AACzC;AACH,eAAOD,OAAO,CAACE,KAAR,KAAgBL,MAAM,CAACM,OAAP,CAAeD,KAAtC;AAA4C,OAFpC,CAAR,CAFoB,CAKrB;;AACA,UAAGJ,CAAH,EACA;AACI;AACAA,QAAAA,CAAC,CAACM,MAAF;AACH,OAJD,MAMA;AACIR,QAAAA,KAAK,CAACN,KAAN,GAAY,CAAC,GAAGM,KAAK,CAACN,KAAV,EAAkBO,MAAM,CAACM,OAAzB,CAAZ,CADJ,CAEI;AACH;AACJ,KAjBI;;AAkBLE,IAAAA,cAAc,CAACT,KAAD,EAAQC,MAAR,EAAe;AACzB,YAAMS,CAAC,GAACV,KAAK,CAACN,KAAN,CAAYS,IAAZ,CAAiB,CAACC,OAAD,EAAWC,KAAX,KAAmB;AACxC;AACH,eAAOD,OAAO,CAACO,EAAR,KAAaV,MAAM,CAACM,OAAP,CAAeI,EAAnC;AAAsC,OAF/B,CAAR;;AAII,UAAGD,CAAC,CAACF,MAAF,KAAW,CAAd,EACA;AACI,cAAMI,CAAC,GAACZ,KAAK,CAACN,KAAN,CAAYmB,SAAZ,CAAuBT,OAAD,IAAW;AACrC,iBAAOA,OAAO,CAACE,KAAR,KAAgBL,MAAM,CAACM,OAAP,CAAeD,KAAtC;AACH,SAFO,CAAR;AAGDN,QAAAA,KAAK,CAACN,KAAN,CAAYoB,MAAZ,CAAmBF,CAAnB,EAAqB,CAArB;AACF,OAND,MAQA;AACIF,QAAAA,CAAC,CAACF,MAAF;AACH;AACZ;;AAlCQ;AAHkB,CAAD,CAA9B;AA2CA,MAAMO,QAAQ,GAAGvB,WAAW,CAAC;AACzBI,EAAAA,IAAI,EAAC,WADoB;AAEzBC,EAAAA,YAAY,EAAC;AAAEmB,IAAAA,YAAY,EAAC,IAAf;AAAsBC,IAAAA,SAAS,EAAC;AAAhC,GAFY;AAGzBnB,EAAAA,QAAQ,EAAC;AACLoB,IAAAA,YAAY,CAAClB,KAAD,EAASC,MAAT,EAAgB;AACxBD,MAAAA,KAAK,CAACgB,YAAN,GAAmB;AACfG,QAAAA,MAAM,EAAClB,MAAM,CAACM,OAAP,CAAeY,MADP;AAEfb,QAAAA,KAAK,EAACL,MAAM,CAACM,OAAP,CAAeD,KAFN;AAGfc,QAAAA,OAAO,EAACnB,MAAM,CAACM,OAAP,CAAea;AAHR,OAAnB;AAKApB,MAAAA,KAAK,CAACiB,SAAN,GAAgB,IAAhB;AACH;;AARI;AAHgB,CAAD,CAA5B;AAgBA,OAAO,MAAMI,aAAa,GAAC1B,UAAU,CAAC2B,OAA/B;AACP,OAAO,MAAMC,YAAY,GAAGR,QAAQ,CAACO,OAA9B;AACP,MAAME,KAAK,GAAGjC,cAAc,CAAC;AACzBkC,EAAAA,OAAO,EAAC;AAAC9B,IAAAA,UAAU,EAACA,UAAU,CAAC8B,OAAvB;AAAgCV,IAAAA,QAAQ,EAACA,QAAQ,CAACU;AAAlD;AADiB,CAAD,CAA5B;AAIA,eAAeD,KAAf","sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialStateItem= {\r\n        items:[]\r\n}\r\n\r\nconst changeItem = createSlice({\r\n    name:'addToCart',\r\n    initialState:initialStateItem,\r\n    reducers:{\r\n        addToCart(state , action){\r\n            // console.log(state.items);\r\n             const e=state.items.find((element  ,index)=>{\r\n                // console.log(element.title);\r\n             return element.title===action.payload.title});\r\n            // console.log(e);\r\n            if(e)\r\n            {\r\n                // console.log('*');\r\n                e.amount++;\r\n            }\r\n            else\r\n            {\r\n                state.items=[...state.items , action.payload];\r\n                // console.log(state.items);\r\n            }\r\n        },\r\n        removeFromCart(state ,action){\r\n            const y=state.items.find((element  ,index)=>{\r\n                // console.log(element.title);\r\n             return element.id===action.payload.id});\r\n            \r\n                if(y.amount===1)\r\n                {\r\n                    const r=state.items.findIndex((element)=>{\r\n                        return element.title===action.payload.title ;\r\n                    })\r\n                   state.items.splice(r,1);\r\n                }\r\n                else\r\n                {\r\n                    y.amount--;\r\n                }\r\n    }\r\n\r\n    }\r\n\r\n})\r\n\r\nconst uiChange = createSlice({\r\n    name:'change-ui',\r\n    initialState:{ notification:null , isShowing:false },\r\n    reducers:{\r\n        notifyChange(state , action){\r\n            state.notification={\r\n                status:action.payload.status,\r\n                title:action.payload.title,\r\n                message:action.payload.message\r\n            }\r\n            state.isShowing=true;\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const changeActions=changeItem.actions;\r\nexport const notifyAction = uiChange.actions;\r\nconst store = configureStore({\r\n    reducer:{changeItem:changeItem.reducer, uiChange:uiChange.reducer}\r\n})\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}